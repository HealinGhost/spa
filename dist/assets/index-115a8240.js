(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))i(s);new MutationObserver(s=>{for(const n of s)if(n.type==="childList")for(const a of n.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&i(a)}).observe(document,{childList:!0,subtree:!0});function t(s){const n={};return s.integrity&&(n.integrity=s.integrity),s.referrerPolicy&&(n.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?n.credentials="include":s.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function i(s){if(s.ep)return;s.ep=!0;const n=t(s);fetch(s.href,n)}})();class c{constructor(e,t,i){this.id=e,this.parentElement=t,this.getNextBiggestZIndex=i,this.element=document.createElement("div"),this.element.draggable=!1,this.element.className="application",this.element.tabIndex=0,this.elementToolbar=document.createElement("div"),this.elementToolbar.className="application-toolbar",this.button=document.createElement("button"),this.button.textContent="X",this.button.className="application-toolbar-button",this.title=document.createElement("label"),this.title.innerText="Chat",this.title.className="application-toolbar-title",this.elementToolbar.appendChild(this.title),this.elementToolbar.appendChild(this.button),this.element.appendChild(this.elementToolbar);let s,n;const a=h=>{let r=h.clientX-s,m=h.clientY-n;const g=(window.innerWidth||document.documentElement.clientWidth||document.body.clientWidth)-this.element.offsetWidth,f=window.innerHeight-this.element.offsetHeight-document.getElementById("toolbar-menu").offsetHeight;r<0&&(r=0),r>g&&(r=g),m<0&&(m=0),m>f&&(m=f),this.element.style.left=`${r}px`,this.element.style.top=`${m}px`};this.element.addEventListener("mousedown",h=>{s=h.clientX-this.element.offsetLeft,n=h.clientY-this.element.offsetTop,this.parentElement.addEventListener("mousemove",a)}),this.parentElement.addEventListener("mouseup",()=>{this.parentElement.removeEventListener("mousemove",a)}),this.initializeEvents(),this.parentElement.appendChild(this.element)}close(){this.parentElement.removeChild(this.element)}initializeEvents(){this.element.addEventListener("click",()=>{this.element.style.zIndex=this.getNextBiggestZIndex()}),this.button.addEventListener("click",()=>{this.close()})}}const y="wss://courselab.lnu.se/message-app/socket";class S extends c{constructor(e,t,i){super(e,t,i),this.communicationData={type:"message",data:"",username:"",channel:"my, not so secret, channel",key:"eDBE76deU7L0H9mEBgxUKVR0VCnq0XBd"},this.inChatScreen=!1,this.applicationScreen=document.createElement("div"),this.applicationScreen.className="chat-application-screen",this.outputBox=document.createElement("div"),this.outputBox.className="chat-application-screen-output-box",this.InformUserLabel=document.createElement("label"),this.InformUserLabel.className="chat-application-inform-label",this.InformUserLabel.textContent="Please add a username",this.inputBoxChat=document.createElement("div"),this.inputBoxChat.className="chat-application-screen-input-box",this.submitText=document.createElement("input"),this.submitText.type="button",this.submitText.value="send",this.submitText.className="chat-application-screen-submit",this.inputText=document.createElement("input"),this.inputText.type="text",this.inputText.className="chat-application-screen-message",this.inputBoxChat.appendChild(this.inputText),this.inputBoxChat.appendChild(this.submitText),this.element.appendChild(this.applicationScreen);const s=localStorage.getItem("chat-username");s===null||s.length<=0?this.showEnterNameScreen():(this.communicationData.username=s,this.showLoggedInScreen()),console.log("Attempting to connect..."),this.websocket=new WebSocket(y),this.initializeChatEvents()}sendMessageEvent(){this.inChatScreen?this.SendMessage(this.inputText.value):this.inputText.value.length===0?this.InformUserLabel.textContent="username needs to atleast 1 character":(localStorage.setItem("chat-username",this.inputText.value),this.communicationData.username=localStorage.getItem("chat-username"),this.inputText.value="",this.showLoggedInScreen())}initializeChatEvents(){this.submitText.addEventListener("click",()=>{this.sendMessageEvent()}),this.applicationScreen.addEventListener("keydown",e=>{e.key==="Enter"&&this.applicationScreen.contains(document.activeElement)&&this.sendMessageEvent()}),this.websocket.onopen=()=>{console.log("Websocket is open!")},this.websocket.onclose=()=>{console.log("Connection is closed")},this.websocket.onmessage=e=>{console.log("Server said: "+e.data);const t=JSON.parse(e.data);this.inChatScreen&&(t.type!=="message"?console.log(t):this.newMessageReceived(t))}}SendMessage(e){if(localStorage.getItem("chat-username")===null)this.showEnterNameScreen();else{this.communicationData.data=e,this.communicationData.username=localStorage.getItem("chat-username");const t=JSON.stringify(this.communicationData);this.websocket.send(t),this.inputText.value=""}}CloseConnection(){this.websocket.close()}showEnterNameScreen(){this.inChatScreen=!1,this.inputText.value="",this.clearScreen(),this.clearMessageScreen(),this.submitText.value="save",this.InformUserLabel.innerText="Please add a username",this.outputBox.appendChild(this.InformUserLabel),this.applicationScreen.appendChild(this.outputBox),this.applicationScreen.appendChild(this.inputBoxChat)}newMessageReceived(e){const t=document.createElement("div");t.className="chat-application-screen-messageBox";const i=document.createElement("div"),s=document.createElement("div"),n=document.createElement("label");n.className="chat-label",n.innerText=e.data;const a=document.createElement("label");a.className="chat-label",e.username===localStorage.getItem("chat-username")?(a.innerText=":"+e.username,t.style.textAlign="right"):a.innerText=e.username+":",i.appendChild(a),s.appendChild(n),t.appendChild(i),t.appendChild(s),t.addEventListener("click",()=>{this.inputText.value=n.innerText}),this.outputBox.firstChild?this.outputBox.insertBefore(t,this.outputBox.firstChild):this.outputBox.appendChild(t)}showLoggedInScreen(){this.inChatScreen=!0,this.clearScreen(),this.clearMessageScreen(),this.submitText.value="send",this.applicationScreen.appendChild(this.outputBox),this.applicationScreen.appendChild(this.inputBoxChat)}clearScreen(){for(;this.applicationScreen.firstChild;)this.applicationScreen.removeChild(this.applicationScreen.firstChild)}clearMessageScreen(){for(;this.outputBox.firstChild;)this.outputBox.removeChild(this.outputBox.firstChild)}close(){this.CloseConnection(),super.close()}}class x{constructor(e,t){this.parentElement=e,this.element=document.createElement("div"),this.element.className="memory-start-screen",this.greetingLable=document.createElement("label"),this.greetingLable.innerText="Please select size",this.greetingLable.className="memory-start-label",this.button1=document.createElement("input"),this.button1.tabIndex=0,this.button1.type="button",this.button1.value="2 x 2",this.button1.className="memory-start-button",this.button1.addEventListener("click",()=>{this.close(),t(2,2)}),this.button2=document.createElement("input"),this.button2.type="button",this.button2.tabIndex=0,this.button2.value="2 x 4",this.button2.className="memory-start-button",this.button2.addEventListener("click",()=>{this.close(),t(4,2)}),this.button3=document.createElement("input"),this.button3.type="button",this.button3.tabIndex=0,this.button3.value="4 x 4",this.button3.className="memory-start-button",this.button3.addEventListener("click",()=>{this.close(),t(4,4)}),this.element.appendChild(this.greetingLable),this.element.appendChild(this.button1),this.element.appendChild(this.button2),this.element.appendChild(this.button3),this.parentElement.appendChild(this.element),this.button1.focus(),this.initializeEvents()}close(){this.parentElement.removeChild(this.element)}initializeEvents(){this.element.addEventListener("keydown",e=>{if(this.element.contains(document.activeElement)){const t=Array.from(this.element.children);let i=t.indexOf(document.activeElement);e.key==="ArrowUp"?i>1&&(i--,t[i].focus()):e.key==="ArrowDown"&&i<t.length-1&&(i++,t[i].focus())}})}}class v{constructor(e,t,i,s){this.questionMarkURL="url(../../img/question.png)",this.imagePaths=i,this.openTileInGame=s,this.classNameShow="memory-game-tile-show",this.classNameHide="memory-game-tile-hidden",this.parentElement=e,this.id=t,this.IsShown=!1,this.element=document.createElement("div"),this.element.tabIndex=0,this.imageDiv=document.createElement("div"),this.imageDiv.className="memory-game-tile-image",this.imageDiv.style.backgroundImage=this.questionMarkURL,this.element.classList.add(this.classNameHide),this.element.classList.add("memory-game-tile"),this.element.appendChild(this.imageDiv),this.parentElement.appendChild(this.element),this.initializeEvents()}setId(e){this.id=e}getId(){return this.id}setIsShown(e){this.show=e}getIsShown(){return this.IsShown}focus(){this.element.focus()}openTile(){this.IsShown=!0,this.element.classList.remove(this.classNameHide),this.element.classList.add(this.classNameShow),this.imageDiv.style.backgroundImage=this.imagePaths[this.id]}closeTile(){this.IsShown=!1,this.element.classList.add(this.classNameHide),this.element.classList.remove(this.classNameShow),this.imageDiv.style.backgroundImage=this.questionMarkURL}initializeEvents(){this.element.addEventListener("click",()=>{this.IsShown||this.openTileInGame(this)}),this.element.addEventListener("keydown",e=>{(e.key==="Enter"||e.key===" ")&&(this.IsShown||this.openTileInGame(this))})}}class L{constructor(e,t,i,s){if(t*i%2!==0)throw new Error("Uneven grid size in the memory game!");this.imagePaths=[],this.imagePaths.push("url(/img/homer.png)"),this.imagePaths.push("url(/img/heisenberg.png)"),this.imagePaths.push("url(/img/jake.png)"),this.imagePaths.push("url(/img/ralph.png)"),this.imagePaths.push("url(/img/snowball.png)"),this.imagePaths.push("url(/img/scream.png)"),this.imagePaths.push("url(/img/bender.png)"),this.imagePaths.push("url(/img/alien.png)"),this.TilesList=[],this.x=t,this.y=i,this.parentElement=e,this.exitGame=s,this.currentlyFocusedElementInGrid=0,this.stateOfMatching=!1,this.previouslySelectedTile=null,this.GameStatePaused=!1,this.gameIsFinished=!1,this.attemptCounter=0,this.timePassed=0,this.timer=null,this.timerIsRunning=!1,this.x===2&&this.y===2?this.numOfColumns=2:this.numOfColumns=4,this.element=document.createElement("div"),this.element.className="memory-game-screen",this.elementGameScreen=document.createElement("div"),this.elementGameScreen.className="memory-game-tileScreen",this.elementGameController=document.createElement("div"),this.elementGameController.className="memory-game-controller",this.gameControlButtonBox=document.createElement("div"),this.gameControlButtonBox.className="memory-game-controller-button-box",this.gameControllStatBox=document.createElement("div"),this.gameControllStatBox.className="memory-game-status-box",this.gameStatusAttemptsMadeLabel=document.createElement("label"),this.gameStatusAttemptsMadeLabel.innerText="Tries: 0",this.gameStatusTimeLabel=document.createElement("label"),this.gameStatusTimeLabel.innerText="Time: 0 s",this.gameControllStatBox.appendChild(this.gameStatusAttemptsMadeLabel),this.gameControllStatBox.appendChild(this.gameStatusTimeLabel),this.controllerGoBack=document.createElement("input"),this.controllerGoBack.type="button",this.controllerGoBack.classList.add("memory-game-controller-button-goBack"),this.controllerGoBack.classList.add("memory-game-controller-button"),this.gameControlButtonBox.appendChild(this.controllerGoBack),this.controllerRestart=document.createElement("input"),this.controllerRestart.type="button",this.controllerRestart.classList.add("memory-game-controller-button-restart"),this.controllerRestart.classList.add("memory-game-controller-button"),this.gameControlButtonBox.appendChild(this.controllerRestart),this.elementGameController.appendChild(this.gameControlButtonBox),this.elementGameController.appendChild(this.gameControllStatBox),this.greetingLable=document.createElement("label"),this.greetingLable.innerText="Welcome to the game!",this.greetingLable.className="memory-start-label",this.gridContainer=document.createElement("div"),this.numOfColumns===4?this.gridcontainerClass="memory-game-grid-container-4columns":this.gridcontainerClass="memory-game-grid-container-2columns",this.gridContainer.className=this.gridcontainerClass,this.elementGameScreen.appendChild(this.gridContainer),this.EndGameAnnouncementDiv=document.createElement("div"),this.EndGameAnnouncementDiv.className="memory-game-end-div",this.EndGameLabel=document.createElement("label"),this.EndGameLabel.className="memory-game-end-label",this.EndGameLabel.innerText="You win!",this.EndGameAnnouncementDiv.appendChild(this.EndGameLabel),this.generateSet(),this.element.appendChild(this.elementGameScreen),this.element.appendChild(this.elementGameController),this.parentElement.appendChild(this.element),this.initializeEvents(),this.TilesList[0].focus()}generateSet(){const e=[];for(let t=0;t<this.x*this.y/2;t++)e.push(t),e.push(t);for(let t=e.length-1;t>0;t--){const i=Math.floor(Math.random()*(t+1));[e[t],e[i]]=[e[i],e[t]]}for(let t=0;t<e.length;t++)this.TilesList.push(new v(this.gridContainer,e[t],this.imagePaths,this.openTileInGame))}close(){this.stopTimer(),this.parentElement.removeChild(this.element)}resetGame(){for(;this.gridContainer.firstChild;)this.gridContainer.removeChild(this.gridContainer.firstChild);this.TilesList=[],this.generateSet(),this.TilesList[0].focus(),this.currentlyFocusedElementInGrid=0,this.stateOfMatching=!1,this.previouslySelectedTile=null,this.GameStatePaused=!1,this.stopTimer(),this.updateAttemptsMade(0),this.updateTime(0),this.gameIsFinished&&(this.gameIsFinished=!1,this.elementGameScreen.appendChild(this.gridContainer),this.elementGameScreen.removeChild(this.EndGameAnnouncementDiv)),clearTimeout(this.timeout)}openTileInGame=e=>{this.startTimer(),this.GameStatePaused||(this.GameStatePaused=!0,this.stateOfMatching?(e.openTile(),e.getId()===this.previouslySelectedTile.getId()?(this.previouslySelectedTile=null,this.stateOfMatching=!1,this.GameStatePaused=!1,this.checkIfGameWasWon()):this.timeout=setTimeout(()=>{e.closeTile(),this.previouslySelectedTile.closeTile(),this.previouslySelectedTile=null,this.GameStatePaused=!1},500),this.updateAttemptsMade(this.attemptCounter+1),this.stateOfMatching=!1):(this.stateOfMatching=!0,this.previouslySelectedTile=e,e.openTile(),this.GameStatePaused=!1))};focusOnController(){this.gameControlButtonBox.firstChild.focus()}updateTime(e){this.timePassed=e,this.gameStatusTimeLabel.innerText=`Time: ${this.timePassed} s`}updateAttemptsMade(e){this.attemptCounter=e,this.gameStatusAttemptsMadeLabel.innerText=`Tries: ${this.attemptCounter}`}checkIfGameWasWon(){!this.GameStatePaused&&this.checkIfAllTilesAreOpen()&&(this.gameIsFinished=!0,this.finaliseGame(),this.focusOnController())}startTimer(){this.timerIsRunning||(this.timer=setInterval(()=>{this.updateTime(this.timePassed+1)},1e3),this.timerIsRunning=!0)}stopTimer(){this.timerIsRunning&&(clearInterval(this.timer),this.timer=null,this.timerIsRunning=!1)}finaliseGame(){this.elementGameScreen.removeChild(this.gridContainer),this.elementGameScreen.appendChild(this.EndGameAnnouncementDiv),this.stopTimer()}checkIfAllTilesAreOpen(){for(let e=0;e<this.TilesList.length;e++)if(!this.TilesList[e].getIsShown())return!1;return!0}initializeEvents(){this.controllerGoBack.addEventListener("click",()=>{this.close(),this.exitGame()}),this.controllerRestart.addEventListener("click",()=>{this.resetGame()}),this.element.addEventListener("keydown",e=>{if(this.element.contains(document.activeElement))if(this.gameControlButtonBox.contains(document.activeElement)){const t=Array.from(this.gameControlButtonBox.children),i=t.indexOf(document.activeElement);e.key==="ArrowLeft"?i>0&&t[i-1].focus():e.key==="ArrowRight"?i<t.length-1&&t[i+1].focus():e.key==="ArrowUp"&&!this.gameIsFinished&&this.TilesList[this.currentlyFocusedElementInGrid].focus()}else e.key==="ArrowLeft"&&this.currentlyFocusedElementInGrid%this.numOfColumns>0&&(this.currentlyFocusedElementInGrid--,this.TilesList[this.currentlyFocusedElementInGrid].focus()),e.key==="ArrowRight"&&this.currentlyFocusedElementInGrid%this.numOfColumns<this.numOfColumns-1&&(this.currentlyFocusedElementInGrid++,this.TilesList[this.currentlyFocusedElementInGrid].focus()),e.key==="ArrowUp"&&this.currentlyFocusedElementInGrid-this.numOfColumns>=0&&(this.currentlyFocusedElementInGrid-=this.numOfColumns,this.TilesList[this.currentlyFocusedElementInGrid].focus()),e.key==="ArrowDown"&&(this.currentlyFocusedElementInGrid+this.numOfColumns<this.TilesList.length?(this.currentlyFocusedElementInGrid+=this.numOfColumns,this.TilesList[this.currentlyFocusedElementInGrid].focus()):this.focusOnController())})}}class T extends c{constructor(e,t,i){super(e,t,i),this.xSize=2,this.ySize=2,this.applicationScreen=document.createElement("div"),this.applicationScreen.className="chat-application-screen",this.element.appendChild(this.applicationScreen),this.title.innerText="Memory Game",this.showStartScreen()}setX=e=>{typeof e=="number"&&(this.xSize=e)};setY=e=>{typeof e=="number"&&(this.ySize=e)};startGame=(e,t)=>{this.updateGameSize(e,t),this.showGameScreen()};exitGame=()=>{this.showStartScreen()};updateGameSize(e,t){this.setX(e),this.setY(t)}showStartScreen(){this.startScreenObject=new x(this.applicationScreen,this.startGame)}showGameScreen(){this.gameScreenObject=new L(this.applicationScreen,this.xSize,this.ySize,this.exitGame)}close(){this.gameScreenObject!=null&&this.gameScreenObject.stopTimer(),super.close()}}class w extends c{constructor(e,t,i){super(e,t,i),this.isPaused=!1,this.answers=[],this.answers.push("yes"),this.answers.push("no"),this.answers.push("maybe?"),this.answers.push("not likely"),this.answers.push("most likely"),this.answers.push("I don't think so"),this.answers.push("try asking again"),this.title.innerText="Magic 8 Ball",this.parentElement=t,this.applicationScreen=document.createElement("div"),this.applicationScreen.className="eightball-application-screen",this.displayBox=document.createElement("div"),this.displayBox.className="eightball-display-box",this.displayBall=document.createElement("div"),this.displayBall.className="eightball-display-OutsideBall",this.displayBallOutput=document.createElement("div"),this.displayBallOutput.className="eightball-display-InsideBall",this.outputLable=document.createElement("label"),this.outputLable.className="eightball-output-label",this.outputLable.innerText="8",this.inputBox=document.createElement("div"),this.inputBox.className="eightball-input-box",this.inputSubmitText=document.createElement("input"),this.inputSubmitText.type="button",this.inputSubmitText.value="Ask",this.inputSubmitText.className="eightball-input-submit",this.inputChat=document.createElement("input"),this.inputChat.type="text",this.inputChat.className="eightball-input-text",this.applicationScreen.appendChild(this.displayBox),this.displayBallOutput.appendChild(this.outputLable),this.displayBall.appendChild(this.displayBallOutput),this.displayBox.appendChild(this.displayBall),this.applicationScreen.appendChild(this.inputBox),this.inputBox.appendChild(this.inputChat),this.inputBox.appendChild(this.inputSubmitText),this.element.appendChild(this.applicationScreen),this.initializeEightballEvents()}initializeEightballEvents(){this.inputSubmitText.addEventListener("click",()=>{this.askQuestionEvent()}),this.applicationScreen.addEventListener("keydown",e=>{e.key==="Enter"&&this.applicationScreen.contains(document.activeElement)&&this.askQuestionEvent()})}askQuestionEvent(){this.inputChat.value.length>0&&!this.isPaused&&(this.isPaused=!0,this.inputChat.focus(),this.inputChat.value="",this.outputLable.classList.contains("fade-in")&&this.outputLable.classList.remove("fade-in"),this.outputLable.classList.add("fade-out"),setTimeout(()=>{const e=Math.floor(Math.random()*6);this.outputLable.innerText=this.answers[e],this.outputLable.classList.remove("fade-out"),this.outputLable.classList.add("fade-in"),this.isPaused=!1},1e3))}close(){super.close()}}const B=document.getElementById("chat-icon"),I=document.getElementById("memory-icon"),G=document.getElementById("magic-8ball-icon"),b=document.getElementById("toolbar-menu"),k=document.getElementById("toolbar"),u=document.getElementById("screen");let o=0;const d=[];let E=0;function p(){return E++,E}B.addEventListener("click",()=>{d.push(new S(o,u,p)),o++});I.addEventListener("click",()=>{d.push(new T(o,u,p)),o++});G.addEventListener("click",()=>{d.push(new w(o,u,p)),o++});function C(){const l="0123456789ABCDEF";let e="#";for(let t=0;t<6;t++)e+=l[Math.floor(Math.random()*16)];return e}b.addEventListener("click",()=>{b.style.backgroundColor=C(),k.style.backgroundColor=C()});
